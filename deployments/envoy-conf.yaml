# https://www.envoyproxy.io/docs/envoy/v1.22.0/
static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          http_filters:
          # https://www.envoyproxy.io/docs/envoy/v1.22.0/configuration/listeners/network_filters/ext_authz_filter
          - name: envoy.filters.network.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              grpc_service:
                envoy_grpc:
                  cluster_name: service_authorization
                timeout: 0.250s
              transport_api_version: V3
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: local_route
            virtual_hosts:
            - name: example_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/nokamoto.github.ExampleService"
                route:
                  cluster: service_example
              - match:
                  prefix: "/nokamoto.github.RBACService"
                route:
                  cluster: service_rbac
              - match:
                  prefix: "/grpc.reflection.v1alpha.ServerReflection"
                route:
                  cluster: service_reflection
  clusters:
  - name: service_example
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    # https://www.envoyproxy.io/docs/envoy/v1.22.0/api-v3/config/cluster/v3/cluster.proto.html
    # Even if default HTTP2 protocol options are desired, this field must be set so that Envoy will assume that the upstream supports HTTP/2 when making new HTTP connection pool connections.
    http2_protocol_options: {}
    load_assignment:
      cluster_name: service_example
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: example
                port_value: 9000
  - name: service_authorization
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    http2_protocol_options: {}
    load_assignment:
      cluster_name: service_authorization
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: authorization
                port_value: 9001
  - name: service_rbac
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    http2_protocol_options: {}
    load_assignment:
      cluster_name: service_rbac
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: rbac
                port_value: 9002
  - name: service_reflection
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    http2_protocol_options: {}
    load_assignment:
      cluster_name: service_reflection
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: reflection
                port_value: 9003
